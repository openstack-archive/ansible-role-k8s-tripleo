- name: Create puppet-apply configmap
  k8s_v1_config_map:
    host: "{{coe_host}}"
    context: "{{coe_config_context}}"
    kubeconfig: "{{coe_config_file}}"
    name: '{{service_name}}-puppet-apply'
    namespace: "{{namespace}}"
    state: present
    labels:
      service: "{{service_name}}"
    data:
      # NOTE(flaper87): This script won't be needed
      # in ansible 2.5
      upload-cm.py: |-
        {{ lookup('file', 'upload-cm.py') }}

      config.pp: |-
        include ::tripleo::packages

        {{step_config}}
      playbook.yaml: |-
        - hosts: localhost
          gather_facts: no
          connection: local
          tasks:
            - name: Remove /etc/puppet/ssl
              file:
                path: /etc/puppet/ssl
                state: absent
            - name: Write /etc/puppet/hieradata/docker.json
              copy:
                content: '{"step": 6}'
                dest: "/etc/puppet/hieradata/docker.json"
                mode: 0755
            - name: Run puppet apply
              shell:
                cmd: |-
                  /usr/bin/puppet apply --detailed-exitcodes --color=false --logdest syslog --logdest console --tags {{tags}} config.pp
                  rc=$?
                  if [ $rc -ne 2 -a $rc -ne 0 ]; then
                    exit $rc
                  fi

                executable: /bin/bash
                chdir: '{%raw%}{{playbook_dir}}{%endraw%}'
              environment:
                FACTER_hostname: "{{service_name}}"
                FACTER_uuid: docker

            - name: Run configmap uploader
              shell:
                cmd: |-
                  /usr/bin/python upload-cm.py --debug --cm-name {%raw%}{{item.key}}{%endraw%} --cm-namespace {{namespace}} -d {%raw%}{{item.value}}{%endraw%}

                executable: /bin/bash
                chdir: '{%raw%}{{playbook_dir}}{%endraw%}'
              with_dict:
                {{puppet_apply_collect_dirs | to_yaml}}

- name: Run puppet-apply
  k8s_v1_job:
    host: "{{coe_host}}"
    context: "{{coe_config_context}}"
    kubeconfig: "{{coe_config_file}}"
    name: '{{service_name}}-puppet-apply'
    namespace: "{{namespace}}"
    state: present
    restart_policy: OnFailure
    labels:
      service: "{{service_name}}"
    containers:
      - image: "{{service_image}}"
        name: '{{service_name}}-puppet-apply'
        command:
          - 'ansible-playbook'
          - '-vvvv'
          - '/var/lib/puppet-apply/playbook.yaml'
        volume_mounts: &volume_mounts
          - name: playbook
            mountPath: /var/lib/puppet-apply/
    volumes:
      - name: playbook
        config_map:
          name: '{{service_name}}-puppet-apply'
